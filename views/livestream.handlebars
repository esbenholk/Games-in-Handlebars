<!DOCTYPE html>
<html lang="en">
	<head>
		<title>HOUSE OF KILLING</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
            body{
                background-color: black;
				height: 100vh;
				width: 100%;
				display: flex;
				flex-direction: column;
				justify-content: flex-start;
            }

			/* //intro blocker */
            #blocker {
              position: fixed;
              left: 0;
              top: 0;
              width: 100%;
              height: 100%;
              background-color: rgba(0,0,0,1);
              display: flex;
              flex-direction: column;
              align-items: center;
              justify-content: center;
			  z-index: 2;
            }
            #instructions {
              width: 70%;
              height: 50%;
              position: fixed;
              left: 50%;
              top: 20%;
              transform: translateX(-50%);
              color: #ffffff;
              text-align: center;
              font-family: Arial;
              font-size: 1vw;
              line-height: auto;
              cursor: pointer;
              display: flex;
              flex-direction: column;
              align-items: center;
              justify-content: center;
            }
			#coverpic{
				height: 120%;
				animation: minimove 4s infinite;
			}
            #inputform{
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
				display: none;
				position: fixed;
				top: 10%;
				left: 50%;
				transform: translateX(-50%);
            }
            button{
                background: blue;
                border-radius: 10px;
                width: 100px;
                font-size: 20px;
                font-weight: 1;
                color: white;
                border: none;
            }
			h1{
				color: white;
			}
			#four42020{

			}
			.page{
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				width: 100%;
				display: flex;
				flex-direction: column;
				/* justify-content: space-between;
				align-items: flex-start;
				margin: 5%; */
			}
			#logoes{
				display: flex;
				width: 100%;
				flex-direction: row;
				justify-content: space-between;
				white-space: nowrap;
				margin-top: 5%;
				margin-left: 5%;
				margin-right: 5%;
				z-index: 1;

			}
			#cluster-felt{
				display: flex;
				white-space: nowrap;
				width: 50%;
				justify-content: flex-end;
				align-items: flex-start;

			}
			#feltzine{
				height: 15vh;
			}

			.logo{
				height: 25vh;
				display: inline-block;

			}
			/* //chat */
			#chatcontainer{
				display: flex;
				justify-content: flex-end;
				align-items: flex-end;
				position: fixed;
				bottom: 0;
				right: 0;
				margin: 5px;
				z-index: 1;
			}
			#chat{
                /* position: fixed;
                bottom: 0;
                right: 0;
				margin: 5px; */
            }
			#chatform{
				max-width: 200px;
				background-color: yellow;
				display: flex;
				white-space: nowrap;
			}
			#chattoggle{
				/* height: 20px; */

			}
			#messages{
				list-style: none;
				color: yellow;
				font-size: 15px;
			}
			li{
				text-align: right;
			}
			/* ////joint and teletubbis */
			.sunpart{
				position: absolute;
				width: 100%;
				height: 100%;
				bottom: 0;
				left: 0;
				min-width: 100px;

			}

			#joint{
				display: inline-block;
				postion: absolute;
				bottom: 0;
				left: 0;
				display: flex;
				white-space: nowrap;
				animation: move 4s infinite;
			}
			@media only screen and (max-width: 600px) {
				main{
					height: 100vh;
				}
				#joint{
				  display: inline-block;
				  postion: absolute;
				  left: 0;
				  display: flex;
				  white-space: nowrap;
				  animation: move 4s infinite;
			  }
			}
			#container{
				display: flex;
				flex-direction: row;
				justify-content: flex-end;
				white-space: nowrap;
				display: inline-block;
			}
			.jointparts{
				display: inline-block;
				height: 50vh;
				position: relative;
			}
			.videoelement{
				position: relative;
				display: inline-block;
				width: 150px;
				height: 100%;
				/* bottom: 180px; */
			}
			.teletubby{
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0;
				left: 0;
			}
			.yellow{
				width: 50%;
				margin: 25%;
				position: absolute;
				top: 25%;
				left: 0;
				}
			.blue{
				width: 50%;
				margin: 30%;
				margin-left: 40%;
				position: absolute;
				top: 20%;
				left: 0;
			}
			.green{
				width: 40%;
				margin: 30%;
				margin-left: 30%;
				position: absolute;
				top: 20%;
				left: 0;
				}
			.rosa{

					width: 50%;
					margin-left: 25%;
					position: absolute;
					top: 30%;
					left: 0;

			}

			/* ////ticker credits */
			.credits {
	          white-space: nowrap;
	          position: absolute;
			  height: 100%;
	          z-index: 8;
	          font-family: "";
			  width: 100%;
	        }
	        a {
	          text-decoration: none;
	          color: white;
			  font-size: 10px;
			  margin: 0;
			  padding: 0;
	        }
			#tickercontainer {
	          height: 20px;
			  overflow: hidden;
			  bottom: 0;
			  position: fixed;
			  left: 0;
			  right: 0;
			  width: 100%;

	        }
			#ticker{
	          position: relative;
	          height: 10px;
	        }

			/* ////animation */
			@keyframes move {
			  0% {
			    margin-top: 0%;
			  }
			  50% {
			    margin-top: -2%;
			  }
			  100% {
			    margin-top: 0%;
			  }
			}
			@keyframes minimove {
			  0% {
			    margin-top: 0;
			  }
			  50% {
			    margin-top: 5%;
			  }
			  100% {
			    margin-top: 0;
			  }
			}
			/* ////invisibility togggles */
			.visible{
				visibility: visible;
				display: inline-block;
			}
			.invisible{
				visibility: hidden;
				display: none;
			}


		</style>

	</head>
	<body>
		<div class="page">
			<div id="logoes">
				<img class="logo" id="four42020" src="teletubby/42020.png"/>
				<div id="cluster-felt">
				<img class="logo" id="clusterdcuklogo" src="teletubby/ClusterduckLogo.png"/>
				<img class="logo" id="feltzine" src="teletubby/feltzine.png"/>
				</div>
			</div>
			<div id="joint">
				<div class="jointparts">
			     <img id="jointfront" class="jointparts sunpart" src="teletubby/top.png" alt="hiiiiiigh" />
				 <img id="sun" class="jointparts sunpart" src="teletubby/sun.png" alt="hiiiiiigh" />
				 </div>
		        <div id="container" class="jointparts"></div>
		        <img id="jointback" class="jointparts" src="teletubby/bottom.png" alt="hi" />
			</div>
		</div>
		<div id="chatcontainer">
			<button id="chattoggle">CHAT</button>
	        <div id="chat" class="invisible">
	            	<ul id="messages"></ul>
	                <form action="" id="chatform" >
	                  <input id="m" autocomplete="off" /><button id="chatbutton">Send</button>
	                </form>
	        </div>
		</div>

		<div id="tickercontainer">
	        <div id="ticker" class="ticker">
		        <div class="credits">
		            <a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>
					<a> credits credtis credits credits </a>

		        </div>
		     </div>

		 </div>

		<div id="blocker">
			<div id="instructions">
				<div id="inputform">
			        <h1 id="space">
			          name your space
			          <input
			            type="text"
			            id="room-id"
			            value="420"
			            autocorrect="off"
			            autocapitalize="off"
			            size="20"
			          />
			        </h1>
			        <div class="buttons">
			        <button id="btn-open-room">Open Room</button>
			        <button id="btn-join-room">Join Room</button>
			        </div>
		        </div>
				<img id="coverpic" src="Join-the-Joint.png"/>
			</div>
		</div>



<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
<script src="https://rtcmulticonnection.herokuapp.com/dist/RTCMultiConnection.min.js"></script>
<script src="https://rtcmulticonnection.herokuapp.com/socket.io/socket.io.js"></script>
<script type="module">
var blocker = document.getElementById( 'blocker' );
var instructions = document.getElementById( 'instructions' );
var inputform = document.getElementById('inputform');


var connection = new RTCMultiConnection();
connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';
connection.session = {
    audio: true,
    video: true
};

connection.sdpConstraints.mandatory = {
    OfferToReceiveAudio: true,
    OfferToReceiveVideo: true
};

let teletubbies = ["teletubby/rosa.png", "teletubby/blu.png", "teletubby/verde.png", "teletubby/giallo.png"]
connection.onstream = function(event) {
    let container =document.getElementById('container');
	let img = document.createElement("img");
	img.src= teletubbies[Math.floor(Math.random() * teletubbies.length)];

	if(img.src.includes("rosa.png")){
		event.mediaElement.classList.add("rosa");
	} else if (img.src.includes("blu.png")){
		event.mediaElement.classList.add("blue");
	} else if (img.src.includes("verde.png")){
		event.mediaElement.classList.add("green");
	} else {
		event.mediaElement.classList.add("yellow");
	}

	img.classList.add("teletubby");
	let videoelement = document.createElement("div");
	videoelement.classList.add("videoelement");
	videoelement.appendChild( event.mediaElement );
	videoelement.appendChild(img);
	container.appendChild(videoelement)
    event.mediaElement.classList.add("video");
};
connection.onstreamended = function(event) {
  var mediaElement = document.getElementById(event.streamid);
  if (mediaElement) {
	 console.log(mediaElement.parentNode);
	mediaElement.parentNode.parentNode.removeChild(mediaElement.parentNode);
  }
};



document.getElementById('btn-open-room').onclick = function() {
    // this.disabled = true;
	var predefinedRoomId = document.getElementById('room-id').value;
	instructions.style.display = 'none';
	blocker.style.display = 'none';
    connection.open( predefinedRoomId, function(
	  isRoomOpened,
	  roomid,
	  error
	) {
		if (error === "Room not available") {
		  let otherRoomId = prompt(
			"it looks like this room already exist - click okay to join the room where your virtual stoners already are", roomid
		  );
		  connection.join( otherRoomId, function(
	  	  isRoomOpened,
	  	  roomid,
	  	  error
	  	) {

	  		  return;


	  	  }
	  	);
		  return;
		}

	  }
	);
};
document.getElementById('btn-join-room').onclick = function() {

	var predefinedRoomId = document.getElementById('room-id').value;
    // this.disabled = true;
	instructions.style.display = 'none';
	blocker.style.display = 'none';
    connection.join( predefinedRoomId, function(
	  isRoomOpened,
	  roomid,
	  error
	) {
		if (error === "Room not available") {
		  let otherRoomId = prompt(
			"it looks like this room doesnt exist yet and u r alone - click okay to open a new room for your friends", roomid
		  );
		  connection.open( otherRoomId, function(
	  	  isRoomOpened,
	  	  roomid,
	  	  error
	  	) {

	  		  return;


	  	  }
	  	);
		  return;
		}

	  }
	);
};


document.getElementById("coverpic").addEventListener( 'click', function () {
    document.getElementById("coverpic").style.display = 'none';
	inputform.style.display ="inline-block";

});
let chatbox = document.getElementById("chat");

document.getElementById("chattoggle").onclick = function(){
	console.log("chat");
	if(chatbox.classList.contains("invisible")){
		chatbox.classList.add("visible");
		chatbox.classList.remove("invisible");
	} else{
		chatbox.classList.remove("visible");
		chatbox.classList.add("invisible");
	}

}




$(function () {
    var socket = io();
    $('form').submit(function(e) {
      e.preventDefault(); // prevents page reloading
      socket.emit('chatmessage', $('#m').val());
      $('#m').val('');
      return false;
    });
    socket.on('chatmessage', function(msg){
      $('#messages').append($('<li>').text(msg));
    });
    socket.on("livestream", function(stream){
        console.log("stream recieved frontend");
        var video2 = document.getElementById("video2");
        video2.srcObject = stream;

    })
  });

	ticker("ticker");
	ticker("ticker2");

	function ticker(element) {
		console.log("ticker cllaed");

	  var ticker = document.getElementById(element);
	  var headlines = ticker.querySelector(".credits");
	  var links = headlines.getElementsByTagName("a");
	  var left = headlines.offsetLeft;
	  var animId;

	  moveHeadLines();

	  function moveHeadLines() {
		left--;
		if (left <= -links[0].offsetWidth) {
		  left += links[0].offsetWidth;
		  headlines.appendChild(links[0]);
		}
		headlines.style.left = left + "px";
		animId = requestAnimationFrame(moveHeadLines);
	  }
	}





		</script>
	</body>
</html>
